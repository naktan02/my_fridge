services:
  api:
    build:
      context: .
    container_name: my_fridge_api
    command: >
      sh -c "
        uv run alembic upgrade head &&
        uv run uvicorn main:app --host 0.0.0.0 --port 8000
      "
    ports:
      - "${HOST_API_PORT:-8000}:8000"
    volumes:
      - .:/app
      - uv_venv:/app/.venv
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      elasticsearch:
        condition: service_healthy
    environment:
      - ES_HOST=http://elasticsearch:9200

  db:
    image: pgvector/pgvector:pg16
    container_name: my_fridge_db
    env_file:
      - .env
    ports:
      - "${HOST_DB_PORT:-5433}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-app} -d ${POSTGRES_DB:-fridge_db}"]
      interval: 5s
      timeout: 3s
      retries: 10

  redis:
    image: redis:7-alpine
    container_name: my_fridge_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # ✅ elasticsearch 서비스 추가
  elasticsearch:
    build: ./elasticsearch
    container_name: my_fridge_es
    environment:
      - discovery.type=single-node
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=false
      - ES_JAVA_OPTS=-Xms2g -Xmx2g
    ports: ["9200:9200"]         # ← 단일 노드면 9300 불필요. 깎자.
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
      - ./elasticsearch/dict:/usr/share/elasticsearch/config/dict:ro  # 경로 수정
    ulimits:
      memlock: { soft: -1, hard: -1 }
      nofile:  { soft: 65536, hard: 65536 }
    healthcheck:
      # curl/wget 없이도 동작. HTTP 200 또는 "You Know, for Search" 확인.
      test: ["CMD-SHELL", "bash -c 'exec 3<>/dev/tcp/127.0.0.1/9200 && printf \"HEAD / HTTP/1.0\\r\\n\\r\\n\" >&3 && head -n1 <&3 | grep -q \"HTTP/1\"'"]
      interval: 10s
      timeout: 10s
      retries: 30
      start_period: 30s

volumes:
  postgres_data:
  redis_data:
  uv_venv:
  elasticsearch_data: