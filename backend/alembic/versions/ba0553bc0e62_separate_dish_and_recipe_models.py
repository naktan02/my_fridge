"""Separate Dish and Recipe models

Revision ID: ba0553bc0e62
Revises: 5216aa8b5788
Create Date: 2025-08-27 14:46:00.264988

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ba0553bc0e62'
down_revision: Union[str, Sequence[str], None] = '5216aa8b5788'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


# ba0553bc0e62_... .py 파일의 upgrade 함수

def upgrade() -> None:
    # ### 기존 테이블의 변경 사항 적용 ###
    op.add_column('users', sa.Column('is_admin', sa.Boolean(), server_default='false', nullable=False))
    op.add_column('users', sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.add_column('users', sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))

    op.add_column('ingredients', sa.Column('category', sa.String(), nullable=True))
    op.add_column('ingredients', sa.Column('storage_type', sa.String(), nullable=True))

    op.add_column('user_ingredients', sa.Column('user_id', sa.Integer(), nullable=False))
    op.create_foreign_key('fk_user_ingredients_user_id', 'user_ingredients', 'users', ['user_id'], ['id'])

    # ### 신규 테이블 생성 (누락된 부분) ###
    op.create_table('dishes',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('cuisine_type', sa.String(), nullable=True),
        sa.Column('tags', sa.ARRAY(sa.String()), nullable=True),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_dishes_id'), 'dishes', ['id'], unique=False)

    op.create_table('recipes',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('dish_id', sa.Integer(), nullable=False),
        sa.Column('author', sa.String(), nullable=True),
        sa.Column('difficulty', sa.Integer(), nullable=True),
        sa.Column('serving_size', sa.String(), nullable=True),
        sa.Column('cooking_time', sa.Integer(), nullable=True),
        sa.Column('instructions', sa.Text(), nullable=False),
        sa.Column('youtube_url', sa.String(), nullable=True),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
        sa.ForeignKeyConstraint(['dish_id'], ['dishes.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_recipes_id'), 'recipes', ['id'], unique=False)

    op.create_table('recipe_ingredients',
        sa.Column('recipe_id', sa.Integer(), nullable=False),
        sa.Column('ingredient_id', sa.Integer(), nullable=False),
        sa.Column('quantity_display', sa.String(), nullable=True),
        sa.ForeignKeyConstraint(['ingredient_id'], ['ingredients.id'], ),
        sa.ForeignKeyConstraint(['recipe_id'], ['recipes.id'], ),
        sa.PrimaryKeyConstraint('recipe_id', 'ingredient_id')
    )
    
    # ### 불필요해진 예전 테이블 삭제 ###
    op.drop_table('dish_types')



def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'updated_at')
    op.drop_column('users', 'created_at')
    op.drop_column('users', 'is_admin')
    op.drop_constraint(None, 'user_ingredients', type_='foreignkey')
    op.alter_column('user_ingredients', 'ingredient_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_column('user_ingredients', 'user_id')
    op.drop_index(op.f('ix_ingredients_name'), table_name='ingredients')
    op.create_unique_constraint(op.f('ingredients_name_key'), 'ingredients', ['name'], postgresql_nulls_not_distinct=False)
    op.drop_column('ingredients', 'storage_type')
    op.drop_column('ingredients', 'category')
    op.create_table('dish_types',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('dish_types_pkey'))
    )
    op.create_index(op.f('ix_dish_types_id'), 'dish_types', ['id'], unique=False)
    # ### end Alembic commands ###
